#!/bin/bash
#SBATCH --nodes=1
#SBATCH --ntasks=16
#SBATCH --time=24:00:00
#SBATCH --partition=blanca-curc-gpu
#SBATCH --gres=gpu:1
#SBATCH --output=test_till66_epoch-%j.out


# calculate eval metrics and generate final typing result given typing vocab rankings generated by eval.py

module purge

echo "loading anaconda"
module load anaconda

echo "loading cuda"
module load cuda/12.1.1

echo "activating entity_typing"
conda activate entity_typing

echo "changing directory"
cd /scratch/alpine/adde1214/lite

# model_dir="output/12_03_11_Mar_31_2025_batch32_margin0.1_lr1e-06lambda0.05/epochs17"
# eval_data_path="data/processed_data/g_dev_processed.json"
# type_vocab_file="data/processed_data/types.txt"
# batch_size=32
# device=0

# ## print info
# echo "Will test the $model_path on $eval_data_path"

# CUDA_VISIBLE_DEVICES=$device python3 eval.py \
#                              --model_dir $model_dir \
#                              --eval_data_path $eval_data_path \
#                              --type_vocab_file $type_vocab_file \
#                              --batch $batch_size

# eval_data_path="data/processed_data/g_test_processed.json"
# echo "Will test the $model_path on $eval_data_path"

# CUDA_VISIBLE_DEVICES=$device python3 eval.py \
#                              --model_dir $model_dir \
#                              --eval_data_path $eval_data_path \
#                              --type_vocab_file $type_vocab_file \
#                              --batch $batch_size

# Set the base directory that contains all epoch checkpoint subdirectories.
base_dir="output/15_47_34_May_26_2025_batch32_margin0.1_lr1e-06lambda0.05"

# Define paths for the evaluation data files.
#./data/bins_processed_data/test_split_q4_processed.json
eval_data_path_dev="./data/processed_data/dev_processed.json"
eval_data_path_test="./data/processed_data/test_processed.json"

# Path to the type vocabulary file.
type_vocab_file="data/processed_data/types.txt"

# Define batch size and CUDA device.
batch_size=64
device=0

# Loop over every directory in the base directory that starts with "epochs".
# for model_dir in "$base_dir"/epochs*; do
for epoch_path in $(ls -d "$base_dir"/epochs* 2>/dev/null | sort -V); do
    # Check if the current path is a directory.
    model_dir="$epoch_path"
    if [ -d "$model_dir" ]; then
        echo "Processing model directory: $model_dir"

        # Evaluate on the dev dataset.
        echo "Will test the model in $model_dir on $eval_data_path_dev"
        CUDA_VISIBLE_DEVICES=$device python3 eval.py \
            --model_dir "$model_dir" \
            --eval_data_path "$eval_data_path_dev" \
            --type_vocab_file "$type_vocab_file" \
            --batch $batch_size

        # Evaluate on the test dataset.
        echo "Will test the model in $model_dir on $eval_data_path_test"
        CUDA_VISIBLE_DEVICES=$device python3 eval.py \
            --model_dir "$model_dir" \
            --eval_data_path "$eval_data_path_test" \
            --type_vocab_file "$type_vocab_file" \
            --batch $batch_size
    fi
done